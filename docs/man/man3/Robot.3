.TH "Robot" 3 "Wed Dec 12 2018" "BaseBot" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Robot \- Main robot class that is called by wpilib\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Robot\&.h>\fP
.PP
Inherits TimedRobot\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBRobotInit\fP () override"
.br
.RI "Runs once on robot boot\&. "
.ti -1c
.RI "void \fBRobotPeriodic\fP () override"
.br
.RI "Runs in a loop while the robot is turned on in any mode\&. "
.ti -1c
.RI "void \fBDisabledInit\fP () override"
.br
.RI "Runs once every time the robot is disabled\&. "
.ti -1c
.RI "void \fBDisabledPeriodic\fP () override"
.br
.RI "Runs in a loop while the robot is disabled\&. "
.ti -1c
.RI "void \fBAutonomousInit\fP () override"
.br
.RI "Runs once at the start of auto\&. Usually while the announcer starts counting down from 3\&. "
.ti -1c
.RI "void \fBAutonomousPeriodic\fP () override"
.br
.RI "Runs in a loop during auto\&. "
.ti -1c
.RI "void \fBTeleopInit\fP () override"
.br
.RI "Runs once at the start of teleop when the bell sounds\&. "
.ti -1c
.RI "void \fBTeleopPeriodic\fP () override"
.br
.RI "Runs in a loop during teleop\&. "
.ti -1c
.RI "void \fBTestPeriodic\fP () override"
.br
.RI "Runs in a loop during test mode\&. "
.ti -1c
.RI "void \fBSetCycleTime\fP (double seconds)"
.br
.ti -1c
.RI "double \fBGetCycleTime\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBDriveWithJoystick\fP * \fBpDriveWithJoystick\fP"
.br
.RI "Pointer for the \fBDriveWithJoystick\fP command\&. "
.in -1c
.SS "Static Public Attributes"

.in +1c
.ti -1c
.RI "static \fBDriveTrain\fP * \fBm_DriveTrain\fP"
.br
.RI "Pointer for the \fBDriveTrain\fP\&. "
.ti -1c
.RI "static \fBOI\fP * \fBm_oi\fP"
.br
.RI "Pointer for the Operator Interface (\fBOI\fP) "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "frc::SendableChooser< frc::Command * > \fBm_chooser\fP"
.br
.ti -1c
.RI "double \fBcycleTime\fP = 0\&.02"
.br
.in -1c
.SH "Detailed Description"
.PP 
Main robot class that is called by wpilib\&. 
.PP
Definition at line 14 of file Robot\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "void Robot::AutonomousInit ()\fC [override]\fP"

.PP
Runs once at the start of auto\&. Usually while the announcer starts counting down from 3\&. This autonomous (along with the chooser code above) shows how to select between different autonomous modes using the dashboard\&. The sendable chooser code works with the Java SmartDashboard\&. If you prefer the LabVIEW Dashboard, remove all of the chooser code and uncomment the GetString code to get the auto name from the text box below the Gyro\&.
.PP
You can add additional auto modes by adding additional commands to the chooser code above (like the commented example) or additional comparisons to the if-else structure below with additional strings & commands\&. 
.PP
Definition at line 65 of file Robot\&.cpp\&.
.SS "void Robot::AutonomousPeriodic ()\fC [override]\fP"

.PP
Runs in a loop during auto\&. 
.PP
Definition at line 81 of file Robot\&.cpp\&.
.SS "void Robot::DisabledInit ()\fC [override]\fP"

.PP
Runs once every time the robot is disabled\&. This function is called once each time the robot enters Disabled mode\&. You can use it to reset any subsystem information you want to clear when the robot is disabled\&. 
.PP
Definition at line 50 of file Robot\&.cpp\&.
.SS "void Robot::DisabledPeriodic ()\fC [override]\fP"

.PP
Runs in a loop while the robot is disabled\&. 
.PP
Definition at line 52 of file Robot\&.cpp\&.
.SS "double Robot::GetCycleTime ()"
Get the current cycle time
.PP
\fBReturns:\fP
.RS 4
Current time gap between cycles in seconds 
.RE
.PP

.SS "void Robot::RobotInit ()\fC [override]\fP"

.PP
Runs once on robot boot\&. 
.PP
Definition at line 11 of file Robot\&.cpp\&.
.SS "void Robot::RobotPeriodic ()\fC [override]\fP"

.PP
Runs in a loop while the robot is turned on in any mode\&. This function is called every robot packet, no matter the mode\&. Use this for items like diagnostics that you want ran during disabled, autonomous, teleoperated and test\&.
.PP
This runs after the mode specific periodic functions, but before LiveWindow and SmartDashboard integrated updating\&. 
.PP
Definition at line 43 of file Robot\&.cpp\&.
.SS "void Robot::SetCycleTime (double seconds)"
Used to set the amount of time between each cycle of the periodic functions\&. WARNING: Anything below 0\&.01 will cause the motor controllers to stop working correctly in some cases
.PP
\fBParameters:\fP
.RS 4
\fIseconds\fP Time gap between cycles in seconds 
.RE
.PP

.SS "void Robot::TeleopInit ()\fC [override]\fP"

.PP
Runs once at the start of teleop when the bell sounds\&. 
.PP
Definition at line 83 of file Robot\&.cpp\&.
.SS "void Robot::TeleopPeriodic ()\fC [override]\fP"

.PP
Runs in a loop during teleop\&. 
.PP
Definition at line 98 of file Robot\&.cpp\&.
.SS "void Robot::TestPeriodic ()\fC [override]\fP"

.PP
Runs in a loop during test mode\&. 
.PP
Definition at line 100 of file Robot\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "double Robot::cycleTime = 0\&.02\fC [private]\fP"

.PP
Definition at line 58 of file Robot\&.h\&.
.SS "frc::SendableChooser<frc::Command*> Robot::m_chooser\fC [private]\fP"

.PP
Definition at line 56 of file Robot\&.h\&.
.SS "\fBDriveTrain\fP * Robot::m_DriveTrain\fC [static]\fP"

.PP
Pointer for the \fBDriveTrain\fP\&. 
.PP
Definition at line 17 of file Robot\&.h\&.
.SS "\fBOI\fP * Robot::m_oi\fC [static]\fP"

.PP
Pointer for the Operator Interface (\fBOI\fP) 
.PP
Definition at line 18 of file Robot\&.h\&.
.SS "\fBDriveWithJoystick\fP* Robot::pDriveWithJoystick"

.PP
Pointer for the \fBDriveWithJoystick\fP command\&. 
.PP
Definition at line 21 of file Robot\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for BaseBot from the source code\&.
